services:
  # Prometheus - Metrics Collection
  prometheus:
    image: prom/prometheus:latest
    container_name: observability-prometheus
    ports:
      - "${PROMETHEUS_PORT:-9090}:9090"
    volumes:
      - ../config/prometheus.yml:/etc/prometheus/prometheus.yml:ro
      - prometheus_data:/prometheus
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
      - '--storage.tsdb.path=/prometheus'
      - '--web.console.libraries=/etc/prometheus/console_libraries'
      - '--web.console.templates=/etc/prometheus/consoles'
      - '--storage.tsdb.retention.time=200h'
      - '--web.enable-lifecycle'
    restart: unless-stopped
    networks:
      - observability
    environment:
      - PROMETHEUS_PORT=${PROMETHEUS_PORT:-9090}
      - BACKEND_HOST=${BACKEND_HOST:-host.docker.internal}
      - BACKEND_PORT=${BACKEND_PORT:-3000}

  # Grafana - Visualization
  grafana:
    image: grafana/grafana:latest
    container_name: observability-grafana
    ports:
      - "${GRAFANA_PORT:-3001}:3000"
    environment:
      - GF_SECURITY_ADMIN_PASSWORD=${GRAFANA_ADMIN_PASSWORD:-admin}
      - GF_USERS_ALLOW_SIGN_UP=false
      - GF_INSTALL_PLUGINS=grafana-piechart-panel
      - PROMETHEUS_PORT=${PROMETHEUS_PORT:-9090}
      - LOKI_PORT=${LOKI_PORT:-3100}
    volumes:
      - grafana_data:/var/lib/grafana
      - ../grafana/provisioning:/etc/grafana/provisioning:ro
      - ../grafana/dashboards:/var/lib/grafana/dashboards:ro
    depends_on:
      - prometheus
      - loki
    restart: unless-stopped
    networks:
      - observability

  # Loki - Log Aggregation
  loki:
    image: grafana/loki:latest
    container_name: observability-loki
    ports:
      - "${LOKI_PORT:-3100}:3100"
    volumes:
      - ../config/loki-config.yml:/etc/loki/local-config.yaml:ro
      - loki_data:/loki
    command: -config.file=/etc/loki/local-config.yaml
    restart: unless-stopped
    networks:
      - observability

  # Promtail - Log Collection
  promtail:
    image: grafana/promtail:latest
    container_name: observability-promtail
    environment:
      - LOG_PATH=${LOG_PATH:-../../logs}
    volumes:
      - ../config/promtail-config.yml:/etc/promtail/config.yml:ro
      - ${LOG_PATH:-../../logs}:/var/log/app:ro
    command: 
      - -config.file=/etc/promtail/config.yml
      - -config.expand-env=true
    depends_on:
      - loki
    restart: unless-stopped
    networks:
      - observability

volumes:
  prometheus_data:
  grafana_data:
  loki_data:

networks:
  observability:
    driver: bridge
